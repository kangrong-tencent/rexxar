<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rexxar.dao.NovelDirectoryMapper" >
  <resultMap id="BaseResultMap" type="com.rexxar.dao.model.NovelDirectory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="crawled_chapter_number" property="crawledChapterNumber" jdbcType="SMALLINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.rexxar.dao.model.NovelDirectoryWithBLOBs" extends="BaseResultMap" >
    <result column="text" property="text" jdbcType="LONGVARCHAR" />
    <result column="latest_text" property="latestText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bookname, crawled_chapter_number, update_time, create_time
  </sql>
  <sql id="Blob_Column_List" >
    text, latest_text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.rexxar.dao.model.NovelDirectoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from novel_directory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rexxar.dao.model.NovelDirectoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from novel_directory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from novel_directory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from novel_directory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rexxar.dao.model.NovelDirectoryExample" >
    delete from novel_directory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rexxar.dao.model.NovelDirectoryWithBLOBs" >
    insert into novel_directory (id, bookname, crawled_chapter_number, 
      update_time, create_time, text, 
      latest_text)
    values (#{id,jdbcType=BIGINT}, #{bookname,jdbcType=VARCHAR}, #{crawledChapterNumber,jdbcType=SMALLINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{text,jdbcType=LONGVARCHAR}, 
      #{latestText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rexxar.dao.model.NovelDirectoryWithBLOBs" >
    insert into novel_directory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="crawledChapterNumber != null" >
        crawled_chapter_number,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="latestText != null" >
        latest_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="crawledChapterNumber != null" >
        #{crawledChapterNumber,jdbcType=SMALLINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="latestText != null" >
        #{latestText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rexxar.dao.model.NovelDirectoryExample" resultType="java.lang.Integer" >
    select count(*) from novel_directory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update novel_directory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bookname != null" >
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.crawledChapterNumber != null" >
        crawled_chapter_number = #{record.crawledChapterNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.latestText != null" >
        latest_text = #{record.latestText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update novel_directory
    set id = #{record.id,jdbcType=BIGINT},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      crawled_chapter_number = #{record.crawledChapterNumber,jdbcType=SMALLINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      text = #{record.text,jdbcType=LONGVARCHAR},
      latest_text = #{record.latestText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update novel_directory
    set id = #{record.id,jdbcType=BIGINT},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      crawled_chapter_number = #{record.crawledChapterNumber,jdbcType=SMALLINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rexxar.dao.model.NovelDirectoryWithBLOBs" >
    update novel_directory
    <set >
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="crawledChapterNumber != null" >
        crawled_chapter_number = #{crawledChapterNumber,jdbcType=SMALLINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="latestText != null" >
        latest_text = #{latestText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rexxar.dao.model.NovelDirectoryWithBLOBs" >
    update novel_directory
    set bookname = #{bookname,jdbcType=VARCHAR},
      crawled_chapter_number = #{crawledChapterNumber,jdbcType=SMALLINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      text = #{text,jdbcType=LONGVARCHAR},
      latest_text = #{latestText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rexxar.dao.model.NovelDirectory" >
    update novel_directory
    set bookname = #{bookname,jdbcType=VARCHAR},
      crawled_chapter_number = #{crawledChapterNumber,jdbcType=SMALLINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>